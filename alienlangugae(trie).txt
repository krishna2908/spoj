
Selected submissions:
?
Source code 20313453

SPOJ submission 20313453 (C++ 4.3.2) plaintext list. Status: AC, problem CODWRECK4, contest SPOJ. By krishnakatikam (krishnakatiakm), 2017-10-07 18:12:38.

    #include <iostream>
    using namespace std;
    struct node
    {
        node *child[26];
        bool leaf;
    } *nn,*temp,*root;
    node *getnode()
    {
        nn = new node;
        for(int i=0 ; i<26 ; i++)
            nn->child[i] = NULL;
        nn->leaf = false;
        return nn;
    }
    void insert(string s)
    {
        int l = s.length();
        temp = root;
        for(int i=0 ; i<l ; i++)
        {
            int ind = s[i]-'a';
            if(!temp->child[ind])
                temp->child[ind] = getnode();
            temp = temp->child[ind];
        }
        temp->leaf = true;
    }
    bool search(node *root,string str)
    {
     node *trie= root;
        for(int i=0;i<str.length();i++)
        {
             int idx=str[i]-'a';
             if(trie->child[idx]==NULL)return false;
             else
               trie=trie->child[idx];
        }
    if(trie->leaf)return true;
    }
    void display(node *temp,int i)
    {
        if(temp!=root)
            cout<<char(i+97)<<endl;
        for(int i=0 ; i<26 ; i++)
            if(temp->child[i])
                display(temp->child[i],i);
    }
    int main()
    {
         int n;
         cin>>n;
         root =new node;
         string dic;
         for(int i=0;i<n;i++){
            cin>>dic;
            insert(dic);
         }
         //display(root,-1);
         int t,i=0;
         cin>>t;
         string inp[t];
         for( i=0;i<t;i++)
         {
             string s;
             cin>>s;
          
             for(int k=0;k<s.length()-1;k++)
             
             {
                 if(search(root,s.substr(0,k+1)) && search(root,s.substr(k+1))){
                           cout<<s.substr(0,k+1)<<" "<<s.substr(k+1)<<endl;
                   break;                 
                }
             }
                 
            }
     
        return 0;
    }
     

