
Selected submissions:
?
Source code 19024036

SPOJ submission 19024036 (C++ 4.3.2) plaintext list. Status: AC, problem TESSER, contest SPOJ. By krishnakatikam (krishnakatiakm), 2017-03-20 17:04:06.

    #include<bits/stdc++.h>
    using namespace std;
    char pat[1000001],txt[1000001];
    void computeLPSArray(char *pat, int M, int *lps);
    void KMPSearch()
    {
        int M = strlen(pat);
        int N = strlen(txt);
        int lps[M];
         //printf("%s",pat);
         //cout<<pat<endl;
        computeLPSArray(pat, M, lps);
        int i = 0;  
        int j  = 0; 
        while (i < N)
        {
            if (pat[j] == txt[i])
            {
                j++;
                i++;
            }
     
            if (j == M)
            {
                printf("YES\n");
                 return ;
                j = lps[j-1];
            }
            else if (i < N && pat[j] != txt[i])
            {
                if (j != 0)
                    j = lps[j-1];
                else
                    i = i+1;
            }
        }
     
        printf("NO\n");
    }
    void computeLPSArray(char *pat, int M, int *lps)
    {
        int len = 0;
     
        lps[0] = 0; // lps[0] is always 0
     
        int i = 1;
        while (i < M)
        {
            if (pat[i] == pat[len])
            {
                len++;
                lps[i] = len;
                i++;
            }
            else // (pat[i] != pat[len])
            {
                if (len != 0)
                {
                    len = lps[len-1];
                }
                else // if (len == 0)
                {
                    lps[i] = 0;
                    i++;
                }
            }
        }
    }
    int main()
    {
        int t;
             scanf("%d",&t);
     
         while(t--)
         {
             int n;
             scanf("%d",&n);
             int a[n+1];
             for(int i=0;i<n;i++)    scanf("%d",&a[i]);
     
                    scanf("%s",pat);
     
             int i=1;
             for(i=1;i<n;i++)
             {
                 if(a[i]>a[i-1])txt[i-1]='G';
                 else if(a[i]<a[i-1])txt[i-1]='L';
                 else txt[i-1]='E';
                    
             }
             txt[i-1]='\0';
              KMPSearch();
         }
     
        return 0;
    } 

